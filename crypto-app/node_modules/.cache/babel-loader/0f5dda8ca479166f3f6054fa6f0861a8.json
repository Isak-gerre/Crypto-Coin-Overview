{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toString = void 0;\n\nconst quote_1 = require(\"./quote\");\n\nconst object_1 = require(\"./object\");\n\nconst function_1 = require(\"./function\");\n/**\n * Stringify primitive values.\n */\n\n\nconst PRIMITIVE_TYPES = {\n  string: quote_1.quoteString,\n  number: value => Object.is(value, -0) ? \"-0\" : String(value),\n  boolean: String,\n  symbol: (value, space, next) => {\n    const key = Symbol.keyFor(value);\n    if (key !== undefined) return `Symbol.for(${next(key)})`; // ES2018 `Symbol.description`.\n\n    return `Symbol(${next(value.description)})`;\n  },\n  bigint: (value, space, next) => {\n    return `BigInt(${next(String(value))})`;\n  },\n  undefined: String,\n  object: object_1.objectToString,\n  function: function_1.functionToString\n};\n/**\n * Stringify a value recursively.\n */\n\nconst toString = (value, space, next, key) => {\n  if (value === null) return \"null\";\n  return PRIMITIVE_TYPES[typeof value](value, space, next, key);\n};\n\nexports.toString = toString;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA;;AACA;AAEA;;;;;AAGA,MAAMA,eAAe,GAA6B;AAChDC,QAAM,EAAEC,mBADwC;AAEhDC,QAAM,EAAGC,KAAD,IAAoBC,MAAM,CAACC,EAAP,CAAUF,KAAV,EAAiB,CAAC,CAAlB,IAAuB,IAAvB,GAA8BG,MAAM,CAACH,KAAD,CAFhB;AAGhDI,SAAO,EAAED,MAHuC;AAIhDE,QAAM,EAAE,CAACL,KAAD,EAAgBM,KAAhB,EAA+BC,IAA/B,KAA6C;AACnD,UAAMC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAcV,KAAd,CAAZ;AAEA,QAAIQ,GAAG,KAAKG,SAAZ,EAAuB,OAAO,cAAcJ,IAAI,CAACC,GAAD,CAAK,GAA9B,CAH4B,CAKnD;;AACA,WAAO,UAAUD,IAAI,CAAEP,KAAa,CAACY,WAAhB,CAA4B,GAAjD;AACD,GAX+C;AAYhDC,QAAM,EAAE,CAACb,KAAD,EAAgBM,KAAhB,EAA+BC,IAA/B,KAA6C;AACnD,WAAO,UAAUA,IAAI,CAACJ,MAAM,CAACH,KAAD,CAAP,CAAe,GAApC;AACD,GAd+C;AAehDW,WAAS,EAAER,MAfqC;AAgBhDW,QAAM,EAAEC,uBAhBwC;AAiBhDC,UAAQ,EAAEC;AAjBsC,CAAlD;AAoBA;;;;AAGO,MAAMC,QAAQ,GAAa,CAAClB,KAAD,EAAQM,KAAR,EAAeC,IAAf,EAAqBC,GAArB,KAA4B;AAC5D,MAAIR,KAAK,KAAK,IAAd,EAAoB,OAAO,MAAP;AAEpB,SAAOJ,eAAe,CAAC,OAAOI,KAAR,CAAf,CAA8BA,KAA9B,EAAqCM,KAArC,EAA4CC,IAA5C,EAAkDC,GAAlD,CAAP;AACD,CAJM;;AAAMW,mBAAQD,QAAR","names":["PRIMITIVE_TYPES","string","quote_1","number","value","Object","is","String","boolean","symbol","space","next","key","Symbol","keyFor","undefined","description","bigint","object","object_1","function","function_1","toString","exports"],"sources":["/Users/isakgerre/Documents/GitHub/Crypto-Coin-Overview/crypto-app/node_modules/javascript-stringify/src/stringify.ts"],"sourcesContent":["import { quoteString } from \"./quote\";\nimport { Next, ToString } from \"./types\";\nimport { objectToString } from \"./object\";\nimport { functionToString } from \"./function\";\n\n/**\n * Stringify primitive values.\n */\nconst PRIMITIVE_TYPES: Record<string, ToString> = {\n  string: quoteString,\n  number: (value: number) => (Object.is(value, -0) ? \"-0\" : String(value)),\n  boolean: String,\n  symbol: (value: symbol, space: string, next: Next) => {\n    const key = Symbol.keyFor(value);\n\n    if (key !== undefined) return `Symbol.for(${next(key)})`;\n\n    // ES2018 `Symbol.description`.\n    return `Symbol(${next((value as any).description)})`;\n  },\n  bigint: (value: bigint, space: string, next: Next) => {\n    return `BigInt(${next(String(value))})`;\n  },\n  undefined: String,\n  object: objectToString,\n  function: functionToString,\n};\n\n/**\n * Stringify a value recursively.\n */\nexport const toString: ToString = (value, space, next, key) => {\n  if (value === null) return \"null\";\n\n  return PRIMITIVE_TYPES[typeof value](value, space, next, key);\n};\n"]},"metadata":{},"sourceType":"script"}