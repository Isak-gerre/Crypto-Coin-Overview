{"ast":null,"code":"var _jsxFileName = \"/Users/isakgerre/Documents/GitHub/Crypto-App/crypto-app/src/App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  method: \"GET\",\n  url: \"http://localhost:8000\"\n};\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});\n\nfunction test() {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 14\n  }, this);\n}\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/isakgerre/Documents/GitHub/Crypto-App/crypto-app/src/App.js"],"names":["React","axios","options","method","url","request","then","response","console","log","data","catch","error","test","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,KADM;AAEdC,EAAAA,GAAG,EAAE;AAFS,CAAhB;AAKAH,KAAK,CACFI,OADH,CACWH,OADX,EAEGI,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACD,CAJH,EAKGC,KALH,CAKS,UAAUC,KAAV,EAAiB;AACtBJ,EAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACD,CAPH;;AASE,SAASC,IAAT,GAAgB;AACZ,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAEH,MAAMC,GAAG,GAAG,MAAM;AAChB,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAMA,G;AAQN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nconst options = {\n  method: \"GET\",\n  url: \"http://localhost:8000\",\n};\n\naxios\n  .request(options)\n  .then(function (response) {\n    console.log(response.data);\n  })\n  .catch(function (error) {\n    console.error(error);\n  });\n\n  function test() {\n      return <h1>App</h1>\n  }\n\nconst App = () => {\n  return (\n    <div>\n      <h1>App</h1>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}